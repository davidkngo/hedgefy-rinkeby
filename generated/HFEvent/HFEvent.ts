// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class HFClaimEvent extends ethereum.Event {
  get params(): HFClaimEvent__Params {
    return new HFClaimEvent__Params(this);
  }
}

export class HFClaimEvent__Params {
  _event: HFClaimEvent;

  constructor(event: HFClaimEvent) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get claimId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get round(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get claimStatus(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get isApproved(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get oracleData(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get juryAccept(): i32 {
    return this._event.parameters[7].value.toI32();
  }

  get juryReject(): i32 {
    return this._event.parameters[8].value.toI32();
  }

  get lastDecisionDate(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get roundStartDate(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class HFCoinBurned extends ethereum.Event {
  get params(): HFCoinBurned__Params {
    return new HFCoinBurned__Params(this);
  }
}

export class HFCoinBurned__Params {
  _event: HFCoinBurned;

  constructor(event: HFCoinBurned) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class HFCoinMinted extends ethereum.Event {
  get params(): HFCoinMinted__Params {
    return new HFCoinMinted__Params(this);
  }
}

export class HFCoinMinted__Params {
  _event: HFCoinMinted;

  constructor(event: HFCoinMinted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class HFNFTMinted extends ethereum.Event {
  get params(): HFNFTMinted__Params {
    return new HFNFTMinted__Params(this);
  }
}

export class HFNFTMinted__Params {
  _event: HFNFTMinted;

  constructor(event: HFNFTMinted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nftURI(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class InvestAdded extends ethereum.Event {
  get params(): InvestAdded__Params {
    return new InvestAdded__Params(this);
  }
}

export class InvestAdded__Params {
  _event: InvestAdded;

  constructor(event: InvestAdded) {
    this._event = event;
  }

  get investor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get investAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalInvestments(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get ticketName(): string {
    return this._event.parameters[4].value.toString();
  }

  get ticketStatus(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get eventTimestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class InvestReimbursed extends ethereum.Event {
  get params(): InvestReimbursed__Params {
    return new InvestReimbursed__Params(this);
  }
}

export class InvestReimbursed__Params {
  _event: InvestReimbursed;

  constructor(event: InvestReimbursed) {
    this._event = event;
  }

  get investor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get reimburseAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalInvestments(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get ticketName(): string {
    return this._event.parameters[4].value.toString();
  }

  get eventTimestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class InvestorEarned extends ethereum.Event {
  get params(): InvestorEarned__Params {
    return new InvestorEarned__Params(this);
  }
}

export class InvestorEarned__Params {
  _event: InvestorEarned;

  constructor(event: InvestorEarned) {
    this._event = event;
  }

  get investor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get investAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalInvestments(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get premiumAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get earning(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get ticketName(): string {
    return this._event.parameters[6].value.toString();
  }

  get ticketStatus(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class InvestsClaimed extends ethereum.Event {
  get params(): InvestsClaimed__Params {
    return new InvestsClaimed__Params(this);
  }
}

export class InvestsClaimed__Params {
  _event: InvestsClaimed;

  constructor(event: InvestsClaimed) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get totalInvestments(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get ticketName(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class PremiumReimbursed extends ethereum.Event {
  get params(): PremiumReimbursed__Params {
    return new PremiumReimbursed__Params(this);
  }
}

export class PremiumReimbursed__Params {
  _event: PremiumReimbursed;

  constructor(event: PremiumReimbursed) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get reimburseAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalPremium(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get ticketName(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class TicketStatusUpdate extends ethereum.Event {
  get params(): TicketStatusUpdate__Params {
    return new TicketStatusUpdate__Params(this);
  }
}

export class TicketStatusUpdate__Params {
  _event: TicketStatusUpdate;

  constructor(event: TicketStatusUpdate) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get premiumAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalInvestments(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get ticketName(): string {
    return this._event.parameters[4].value.toString();
  }

  get previousStatus(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get ticketStatus(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get payoutRatio(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get closingDate(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get startDate(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class HFEvent extends ethereum.SmartContract {
  static bind(address: Address): HFEvent {
    return new HFEvent("HFEvent", address);
  }
}

export class EmitHFClaimEventCall extends ethereum.Call {
  get inputs(): EmitHFClaimEventCall__Inputs {
    return new EmitHFClaimEventCall__Inputs(this);
  }

  get outputs(): EmitHFClaimEventCall__Outputs {
    return new EmitHFClaimEventCall__Outputs(this);
  }
}

export class EmitHFClaimEventCall__Inputs {
  _call: EmitHFClaimEventCall;

  constructor(call: EmitHFClaimEventCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get claim(): EmitHFClaimEventCallClaimStruct {
    return changetype<EmitHFClaimEventCallClaimStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get oracleData(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get juryAccept(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get juryReject(): i32 {
    return this._call.inputValues[5].value.toI32();
  }
}

export class EmitHFClaimEventCall__Outputs {
  _call: EmitHFClaimEventCall;

  constructor(call: EmitHFClaimEventCall) {
    this._call = call;
  }
}

export class EmitHFClaimEventCallClaimStruct extends ethereum.Tuple {
  get claimId(): BigInt {
    return this[0].toBigInt();
  }

  get round(): i32 {
    return this[1].toI32();
  }

  get claimStatus(): i32 {
    return this[2].toI32();
  }

  get condition(): EmitHFClaimEventCallClaimConditionStruct {
    return changetype<EmitHFClaimEventCallClaimConditionStruct>(
      this[3].toTuple()
    );
  }

  get isApproved(): boolean {
    return this[4].toBoolean();
  }

  get lastDecisionDate(): BigInt {
    return this[5].toBigInt();
  }

  get oracleData(): BigInt {
    return this[6].toBigInt();
  }

  get roundStartDate(): BigInt {
    return this[7].toBigInt();
  }
}

export class EmitHFClaimEventCallClaimConditionStruct extends ethereum.Tuple {
  get claimType(): string {
    return this[0].toString();
  }

  get constraints(): Array<string> {
    return this[1].toStringArray();
  }

  get parameters(): Array<string> {
    return this[2].toStringArray();
  }
}

export class EmitHFCoinBurnedCall extends ethereum.Call {
  get inputs(): EmitHFCoinBurnedCall__Inputs {
    return new EmitHFCoinBurnedCall__Inputs(this);
  }

  get outputs(): EmitHFCoinBurnedCall__Outputs {
    return new EmitHFCoinBurnedCall__Outputs(this);
  }
}

export class EmitHFCoinBurnedCall__Inputs {
  _call: EmitHFCoinBurnedCall;

  constructor(call: EmitHFCoinBurnedCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class EmitHFCoinBurnedCall__Outputs {
  _call: EmitHFCoinBurnedCall;

  constructor(call: EmitHFCoinBurnedCall) {
    this._call = call;
  }
}

export class EmitHFCoinMintedCall extends ethereum.Call {
  get inputs(): EmitHFCoinMintedCall__Inputs {
    return new EmitHFCoinMintedCall__Inputs(this);
  }

  get outputs(): EmitHFCoinMintedCall__Outputs {
    return new EmitHFCoinMintedCall__Outputs(this);
  }
}

export class EmitHFCoinMintedCall__Inputs {
  _call: EmitHFCoinMintedCall;

  constructor(call: EmitHFCoinMintedCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class EmitHFCoinMintedCall__Outputs {
  _call: EmitHFCoinMintedCall;

  constructor(call: EmitHFCoinMintedCall) {
    this._call = call;
  }
}

export class EmitHFNFTMintedCall extends ethereum.Call {
  get inputs(): EmitHFNFTMintedCall__Inputs {
    return new EmitHFNFTMintedCall__Inputs(this);
  }

  get outputs(): EmitHFNFTMintedCall__Outputs {
    return new EmitHFNFTMintedCall__Outputs(this);
  }
}

export class EmitHFNFTMintedCall__Inputs {
  _call: EmitHFNFTMintedCall;

  constructor(call: EmitHFNFTMintedCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nftURI(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class EmitHFNFTMintedCall__Outputs {
  _call: EmitHFNFTMintedCall;

  constructor(call: EmitHFNFTMintedCall) {
    this._call = call;
  }
}

export class EmitInvestAddedCall extends ethereum.Call {
  get inputs(): EmitInvestAddedCall__Inputs {
    return new EmitInvestAddedCall__Inputs(this);
  }

  get outputs(): EmitInvestAddedCall__Outputs {
    return new EmitInvestAddedCall__Outputs(this);
  }
}

export class EmitInvestAddedCall__Inputs {
  _call: EmitInvestAddedCall;

  constructor(call: EmitInvestAddedCall) {
    this._call = call;
  }

  get investor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get investAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get totalInvestments(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get ticketName(): string {
    return this._call.inputValues[4].value.toString();
  }

  get ticketStatus(): i32 {
    return this._call.inputValues[5].value.toI32();
  }
}

export class EmitInvestAddedCall__Outputs {
  _call: EmitInvestAddedCall;

  constructor(call: EmitInvestAddedCall) {
    this._call = call;
  }
}

export class EmitInvestReimbursedCall extends ethereum.Call {
  get inputs(): EmitInvestReimbursedCall__Inputs {
    return new EmitInvestReimbursedCall__Inputs(this);
  }

  get outputs(): EmitInvestReimbursedCall__Outputs {
    return new EmitInvestReimbursedCall__Outputs(this);
  }
}

export class EmitInvestReimbursedCall__Inputs {
  _call: EmitInvestReimbursedCall;

  constructor(call: EmitInvestReimbursedCall) {
    this._call = call;
  }

  get investor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get reimburseAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get totalInvestments(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get ticketName(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class EmitInvestReimbursedCall__Outputs {
  _call: EmitInvestReimbursedCall;

  constructor(call: EmitInvestReimbursedCall) {
    this._call = call;
  }
}

export class EmitInvestorEarnedCall extends ethereum.Call {
  get inputs(): EmitInvestorEarnedCall__Inputs {
    return new EmitInvestorEarnedCall__Inputs(this);
  }

  get outputs(): EmitInvestorEarnedCall__Outputs {
    return new EmitInvestorEarnedCall__Outputs(this);
  }
}

export class EmitInvestorEarnedCall__Inputs {
  _call: EmitInvestorEarnedCall;

  constructor(call: EmitInvestorEarnedCall) {
    this._call = call;
  }

  get investor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get investAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get earning(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get ticket(): EmitInvestorEarnedCallTicketStruct {
    return changetype<EmitInvestorEarnedCallTicketStruct>(
      this._call.inputValues[4].value.toTuple()
    );
  }
}

export class EmitInvestorEarnedCall__Outputs {
  _call: EmitInvestorEarnedCall;

  constructor(call: EmitInvestorEarnedCall) {
    this._call = call;
  }
}

export class EmitInvestorEarnedCallTicketStruct extends ethereum.Tuple {
  get ticketId(): BigInt {
    return this[0].toBigInt();
  }

  get premiumAmount(): BigInt {
    return this[1].toBigInt();
  }

  get totalInvestments(): BigInt {
    return this[2].toBigInt();
  }

  get ticketName(): string {
    return this[3].toString();
  }

  get ticketStatus(): i32 {
    return this[4].toI32();
  }

  get payoutRatio(): BigInt {
    return this[5].toBigInt();
  }

  get closingDate(): BigInt {
    return this[6].toBigInt();
  }

  get startDate(): BigInt {
    return this[7].toBigInt();
  }

  get endDate(): BigInt {
    return this[8].toBigInt();
  }
}

export class EmitInvestsClaimedCall extends ethereum.Call {
  get inputs(): EmitInvestsClaimedCall__Inputs {
    return new EmitInvestsClaimedCall__Inputs(this);
  }

  get outputs(): EmitInvestsClaimedCall__Outputs {
    return new EmitInvestsClaimedCall__Outputs(this);
  }
}

export class EmitInvestsClaimedCall__Inputs {
  _call: EmitInvestsClaimedCall;

  constructor(call: EmitInvestsClaimedCall) {
    this._call = call;
  }

  get buyer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get totalInvestments(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get ticketName(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class EmitInvestsClaimedCall__Outputs {
  _call: EmitInvestsClaimedCall;

  constructor(call: EmitInvestsClaimedCall) {
    this._call = call;
  }
}

export class EmitPremiumReimbursedCall extends ethereum.Call {
  get inputs(): EmitPremiumReimbursedCall__Inputs {
    return new EmitPremiumReimbursedCall__Inputs(this);
  }

  get outputs(): EmitPremiumReimbursedCall__Outputs {
    return new EmitPremiumReimbursedCall__Outputs(this);
  }
}

export class EmitPremiumReimbursedCall__Inputs {
  _call: EmitPremiumReimbursedCall;

  constructor(call: EmitPremiumReimbursedCall) {
    this._call = call;
  }

  get buyer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get reimburseAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get totalPremium(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get ticketName(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class EmitPremiumReimbursedCall__Outputs {
  _call: EmitPremiumReimbursedCall;

  constructor(call: EmitPremiumReimbursedCall) {
    this._call = call;
  }
}

export class EmitTicketStatusUpdateCall extends ethereum.Call {
  get inputs(): EmitTicketStatusUpdateCall__Inputs {
    return new EmitTicketStatusUpdateCall__Inputs(this);
  }

  get outputs(): EmitTicketStatusUpdateCall__Outputs {
    return new EmitTicketStatusUpdateCall__Outputs(this);
  }
}

export class EmitTicketStatusUpdateCall__Inputs {
  _call: EmitTicketStatusUpdateCall;

  constructor(call: EmitTicketStatusUpdateCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get previousStatus(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get ticket(): EmitTicketStatusUpdateCallTicketStruct {
    return changetype<EmitTicketStatusUpdateCallTicketStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class EmitTicketStatusUpdateCall__Outputs {
  _call: EmitTicketStatusUpdateCall;

  constructor(call: EmitTicketStatusUpdateCall) {
    this._call = call;
  }
}

export class EmitTicketStatusUpdateCallTicketStruct extends ethereum.Tuple {
  get ticketId(): BigInt {
    return this[0].toBigInt();
  }

  get premiumAmount(): BigInt {
    return this[1].toBigInt();
  }

  get totalInvestments(): BigInt {
    return this[2].toBigInt();
  }

  get ticketName(): string {
    return this[3].toString();
  }

  get ticketStatus(): i32 {
    return this[4].toI32();
  }

  get payoutRatio(): BigInt {
    return this[5].toBigInt();
  }

  get closingDate(): BigInt {
    return this[6].toBigInt();
  }

  get startDate(): BigInt {
    return this[7].toBigInt();
  }

  get endDate(): BigInt {
    return this[8].toBigInt();
  }
}
