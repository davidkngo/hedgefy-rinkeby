type User @entity {
  id: ID!
  investments: [Investment!]! @derivedFrom(field: "investor")
  premiums: [Premium!] @derivedFrom(field: "buyer")
  tickets: [Ticket!] @derivedFrom(field: "buyer")
}

"""
Ticket detail information: HFEntity.sol
"""
type Ticket @entity {
  id: ID!
  buyer: User!
  ticketId: BigInt!
  bidProcessType: String!
  claimAmount: BigInt!
  premiumAmount: BigInt!
  authorizedAmount: BigInt!
  marginRatio: BigInt!
  ticketName: String!
  ticketStatus: Int!
  dates: TicketDate!
  selectedBidding: Investment
}

"""
TicketDate detail information: HFEntity.sol
"""
type TicketDate @entity {
  id: ID!
  closingDate: BigInt!
  startDate: BigInt!
  endDate: BigInt!
}

"""
Investment detail information: HFEntity.sol
"""
type Investment @entity {
  id: ID!
  ticketId: BigInt!
  ticket: Ticket!
  investor: User!
  askingAmount: BigInt!
  earning: BigInt!
  bidProcessType: String!
  ticketName: String!
  tookPremium: Boolean!
  reimbursedInvest: Boolean!
  removed: Boolean!
  expiredInvestAmount: BigInt!
  askingExpireDate: BigInt!
  investDate: BigInt!
}

"""
Premium detail information: HFEntity.sol
"""
type Premium @entity {
  id: ID!
  ticket: Ticket!
  buyer: User!
  askingClaimAmount: BigInt!
  askingPremiumAmount: BigInt!
  bidProcessType: String!
  ticketName: String!
  reimbursedPremium: Boolean!
}

"""
Claim detail information: HFEntity.sol
"""
type Claim @entity {
  id: ID!
  claimId: BigInt!
  round: BigInt!
  claimStatus: Int!
  condition: ClaimCondition!
  isApproved: Boolean!
  lastDecisionDate: BigInt!
  oracleData: BigInt!
  roundStartDate: BigInt!
}

"""
ClaimCondition detail information: HFEntity.sol
"""
type ClaimCondition @entity {
  id: ID!
  claimType: String!
  claimConstraints: [String!]!
  claimParameters: [String!]!
  claims: [Claim!]! @derivedFrom(field: "condition")
}

"""
JuryResult detail information: HFEntity.sol
"""
type JuryResult @entity {
  id: ID!
  accept: Int!
  reject: Int!
}

"""
NFT detail information: HFEntity.sol
"""
type NFT @entity {
  id: ID!
  tokenId: BigInt!
  tokenContract: String!
  tokenType: Int!
}
