type _Schema_
  @fulltext(
    name: "HedgefyTicketSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "Ticket"
        fields: [{ name: "ticketName" }, { name: "ticketStatus" }]
      }
    ]
  )

"""
Ticket detail information: HFEntity.sol
"""
type Ticket @entity {
  id: ID!
  buyer: Buyer!
  ticketId: BigInt!
  premiumAmount: BigInt!
  totalInvestments: BigInt!
  ticketName: String!
  previousStatus: Int!
  ticketStatus: Int!
  payoutRatio: BigInt!
  closingDate: BigInt!
  startDate: BigInt!
  endDate: BigInt!
}

"""
Buer Information HFTicketRepository.sol
"""
type Buyer @entity {
  id: ID!
  tickets: [Ticket!]! @derivedFrom(field: "buyer")
}

# type Investment @entity {
#   id: ID!
#   ticket: Ticket!
#   investorAddress: String!
#   investorAmount: Int!
#   earning: Int
#   ticketName: String!
#   tookPremium: Boolean
#   reimbursedInvest: Boolean
#   expiredInvestAmount: Int
#   investDate: Int!
# }

# type Premium @entity {
#   id: ID!
#   ticket: Ticket!
#   buyerAddress: String!
#   premiumAmount: Int!
#   ticketName: String!
#   reimbursedPremium: Boolean
# }

# type Claim @entity {
#   id: ID!
#   round: Int
#   claimStatus: ClaimStatus!
#   condition: ClaimCondition!
#   isApproved: Boolean
#   lastDecisionDate: Int
#   oracleData: Int
#   roundStartDate: Int
# }

# type ClaimCondition @entity {
#   id: ID!
#   claimType: String!
#   constraints: [String]!
#   parameters: [String]!
# }

# type JuryResult @entity {
#   id: ID!
#   Accept: Int
#   Reject: Int
# }

# type NFT @entity {
#   id: ID!
#   tokenId: Int!
#   tokenContract: String!
#   tokenType: NFTType
# }

# enum ClaimStatus {
#   NotStarted
#   ClaimInProcess
#   ClaimUnderReview
#   JuryProcessing
#   ClaimRewarded
# }

# enum JuryVote {
#   NoVote
#   Accept
#   Reject
# }

# enum NFTType {
#   None
#   HFNFT
#   ERC721
#   ERC1155
# }

"""
Ticket Status: HFEnum.sol
"""
# enum TicketStatus {
#   Void
#   Open
#   Closed
#   Canceled
#   Expired
#   ClaimProcessing
#   Claimed
# }